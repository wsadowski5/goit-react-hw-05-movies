{"version":3,"file":"static/js/247.683366ca.chunk.js","mappings":"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","sources":["Api/Api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0MDcxMTM2ZjA4NjQ3NTA5NTgxYjRiMThlODMyYzMyNSIsInN1YiI6IjY1NzFmZmRjOTBmY2EzMDBhZWEzOGY5OSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Bu2LtBgW0oayB7x9wrEYwfrkjgMgE2JOF3-klO_KvUU',\n  },\n};\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(\n    'https://api.themoviedb.org/3/trending/all/day?language=en-US',\n    options\n  );\n  return response.data.results;\n};\n\nexport const fetchMovies = async query => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?query=${query}&include_adult=false&language=en-US&page=1`,\n    options\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?language=en-US`,\n    options\n  );\n  return response.data\n};\n\nexport const fetchMovieCredits = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?language=en-US`,\n    options\n  );\n  return response.data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n  const response = await axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?language=en-US&page=1`,\n    options\n  );\n\n  return response.data.results\n};\n","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieCredits } from 'Api/Api';\n\nexport const Cast = () => {\n  const { movieId } = useParams();\n  const [movieCast, setMovieCast] = useState({});\n\n  const defaultImg =\n    'https://cdn.pixabay.com/photo/2016/08/08/09/17/avatar-1577909_1280.png';\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      try {\n        const movieCast = await fetchMovieCredits(movieId);\n        setMovieCast(movieCast);\n      } catch (error) {\n        console.error('Błąd podczas pobierania danych o filmach:', error);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  const castList = movieCast.cast\n    ? movieCast.cast.map(actor => (\n        <div key={actor.id}>\n          <img\n            src={\n              actor.profile_path\n                ? `https://image.tmdb.org/t/p/w500/${actor.profile_path}`\n                : defaultImg\n            }\n            alt={`${actor.name}`}\n            width=\"200\"\n          />\n          <h3>{actor.name}</h3>\n          <p>Character: {actor.character}</p>\n        </div>\n      ))\n    : null;\n\n  return <div>{castList}</div>;\n};\n"],"names":["options","method","headers","accept","Authorization","fetchTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","axios","sent","abrupt","data","results","stop","apply","arguments","fetchMovies","_ref2","_callee2","query","_context2","concat","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchMovieCredits","_ref4","_callee4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_context5","_x4","Cast","useParams","_useState","useState","_useState2","_slicedToArray","movieCast","setMovieCast","useEffect","fetchCast","_movieCast","t0","console","error","castList","cast","map","actor","_jsxs","children","_jsx","src","profile_path","alt","name","width","character","id"],"sourceRoot":""}